
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author sarkum14
 */
public class MainWindow extends javax.swing.JFrame {
     Connection con = null; // connection for database
     PreparedStatement stmt_selectAll = null; // prepated statement for select
     PreparedStatement stmt_add=null; // prepared statement for inserting a costumer
     ResultSet res_selectAll = null; // resultset statement for select
     PreparedStatement stmt_delete=null; // prepared statement for deleting a constumer
     PreparedStatement stmt_update=null; //prepared statement for updating the table
     int id = 0;
     
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        // initialise components
        initComponents();
         try {
             // Register a driver for the MySQL database
            Class.forName("com.mysql.jdbc.Driver");
        } catch (ClassNotFoundException ex) {
            // error message can not upload
            System.out.println("Datenbankdriver kann nicht geladet werden");
            javax.swing.JOptionPane.showMessageDialog(this, "Datenbankdriver kann nicht geladet werden");
            System.exit(1);
        }
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblServer = new javax.swing.JLabel();
        lblPort = new javax.swing.JLabel();
        bttnConnection = new javax.swing.JButton();
        bttnDiscon = new javax.swing.JButton();
        txtServer = new javax.swing.JTextField();
        txtPort = new javax.swing.JTextField();
        lblID = new javax.swing.JLabel();
        lblVorname = new javax.swing.JLabel();
        lblNachname = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        textID = new javax.swing.JTextField();
        textVorname = new javax.swing.JTextField();
        textNachname = new javax.swing.JTextField();
        textAge = new javax.swing.JTextField();
        bttnADD = new javax.swing.JButton();
        txtclear = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        bttnRechts = new javax.swing.JButton();
        bttnLinks = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        lblDatenbank = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtDatenbank = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        bttnUpdate = new javax.swing.JButton();
        bttnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblServer.setText("Server");

        lblPort.setText("Port");

        bttnConnection.setText("Connect");
        bttnConnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnConnectionActionPerformed(evt);
            }
        });

        bttnDiscon.setText("Disconnect");
        bttnDiscon.setEnabled(false);
        bttnDiscon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnDisconActionPerformed(evt);
            }
        });

        txtServer.setText("localhost");
        txtServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtServerActionPerformed(evt);
            }
        });

        txtPort.setText("3306");
        txtPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPortActionPerformed(evt);
            }
        });

        lblID.setText("id:");

        lblVorname.setText("Vorname:");

        lblNachname.setText("Nachname:");

        lblAge.setText("Age:");

        textID.setEditable(false);
        textID.setText("jTextField6");
        textID.setEnabled(false);
        textID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textIDActionPerformed(evt);
            }
        });

        textVorname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textVornameActionPerformed(evt);
            }
        });

        textNachname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNachnameActionPerformed(evt);
            }
        });

        textAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textAgeActionPerformed(evt);
            }
        });

        bttnADD.setText("Add Kunde");
        bttnADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnADDActionPerformed(evt);
            }
        });

        txtclear.setText("Clear");
        txtclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtclearActionPerformed(evt);
            }
        });

        bttnRechts.setText(">");
        bttnRechts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnRechtsActionPerformed(evt);
            }
        });

        bttnLinks.setText("<");
        bttnLinks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnLinksActionPerformed(evt);
            }
        });

        lblDatenbank.setText("Datenbank");

        lblUsername.setText("Username");

        lblPassword.setText("Password");

        txtDatenbank.setText("shop");
        txtDatenbank.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDatenbankActionPerformed(evt);
            }
        });

        txtUsername.setText("root");

        bttnUpdate.setText("Update");
        bttnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnUpdateActionPerformed(evt);
            }
        });

        bttnDelete.setText("Delete");
        bttnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bttnADD))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(46, 46, 46)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblServer)
                                        .addComponent(lblID, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblPort, javax.swing.GroupLayout.Alignment.TRAILING)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(45, 45, 45)
                                    .addComponent(lblAge)))
                            .addComponent(lblNachname, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblVorname, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtServer, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblDatenbank)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(txtDatenbank, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(32, 32, 32)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(bttnDiscon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(bttnConnection, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblPassword)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(textNachname)
                                    .addComponent(textAge, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(bttnRechts)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bttnLinks))
                                    .addComponent(txtclear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(textVorname, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(187, 187, 187)
                                        .addComponent(bttnDelete))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(textID, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(239, 239, 239)
                                        .addComponent(bttnUpdate)))))))
                .addGap(30, 30, 30))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(jSeparator2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblServer)
                    .addComponent(bttnConnection)
                    .addComponent(txtServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDatenbank)
                    .addComponent(txtDatenbank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bttnDiscon)
                        .addComponent(lblPort)
                        .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblUsername)
                        .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPassword))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(bttnADD)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bttnUpdate)
                        .addGap(4, 4, 4)
                        .addComponent(bttnDelete)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bttnRechts)
                            .addComponent(bttnLinks))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtclear))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblID)
                            .addComponent(textID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblVorname, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textVorname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNachname)
                            .addComponent(textNachname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAge)
                            .addComponent(textAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(39, 39, 39)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 91, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bttnConnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnConnectionActionPerformed
         
        try {
            // establish connection 
            con = DriverManager.getConnection("jdbc:mysql://"+txtServer.getText()+":"+txtPort.getText()+"/"+txtDatenbank.getText(), "root", "");
            // disable and enable components wrt connected or not connected
            bttnConnection.setEnabled(false);
            txtServer.setEnabled(false);
            bttnDiscon.setEnabled(true);

        } catch (SQLException ex) {
            // error message can not connect
            System.out.println("Verbindung mit dem Datenbankserver " + "konnte nicht hergestellt werden!");    
            javax.swing.JOptionPane.showMessageDialog(this, "Datenbankdriver kann nicht geladet werden");
    }
        try {
            // prepared statements for update, delete, insert
            stmt_selectAll = con.prepareStatement("SELECT * FROM kunden" );
            stmt_add = con.prepareStatement("INSERT INTO kunden(vorname, nachname, age) values(?, ?, ?)");
            stmt_update = con.prepareStatement("UPDATE kunden SET Vorname = ?, Nachname = ?, Age = ? WHERE ID = ?");
            stmt_delete = con.prepareStatement("DELETE from kunden WHERE ID = ?");
            res_selectAll = stmt_selectAll.executeQuery();
       
        if(res_selectAll.next()){
            // take results from resultset  
            int id = res_selectAll.getInt("ID");
            String vorname = res_selectAll.getString("Vorname");
            String nachname = res_selectAll.getString("Nachname");
            String age = res_selectAll.getString("Age");
            
            // save the taken results in variables  
            textID.setText(""+id);
            textVorname.setText(vorname);
            textNachname.setText(nachname);
            textAge.setText(age);
        }

        }
        catch (SQLException ex) {
        // error message can not select
        System.out.println("Select konnte nicht gemacht werden!");    
            javax.swing.JOptionPane.showMessageDialog(this, "Select kann nicht gemacht werden");
        }
    }//GEN-LAST:event_bttnConnectionActionPerformed

    private void txtPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPortActionPerformed

    private void txtServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtServerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtServerActionPerformed

    private void bttnDisconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnDisconActionPerformed

        try {
            // close connection   
            con.close();
            // disable and enable components wrt connected or not connected
            bttnConnection.setEnabled(true);
            txtServer.setEnabled(true);
            bttnDiscon.setEnabled(false);

        } catch (SQLException ex) {
            // error message can not connect
            System.out.println("Verbindung mit dem Datenbankserver " + "konnte nicht geschlossen werden!");    
            javax.swing.JOptionPane.showMessageDialog(this, "Datenbankdriver kann nicht geschlossen werden");
    }
    
                       }//GEN-LAST:event_bttnDisconActionPerformed

    private void bttnRechtsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnRechtsActionPerformed
        try {
        // take the results from resultset
       // push(verschiebe) the clients to the right                
        if(res_selectAll.next()){ 
            int id = res_selectAll.getInt("ID"); 
            String vorname = res_selectAll.getString("Vorname");
            String nachname = res_selectAll.getString("Nachname");
            String age = res_selectAll.getString("Age");
            // save the taken results in variables
            textID.setText(""+id);
            textVorname.setText(vorname);
            textNachname.setText(nachname);
            textAge.setText(age);
        } else {
            // set the row pointer before the first element
            res_selectAll.beforeFirst();
        }
        }
        catch (SQLException ex) {
           // error message can not select
        System.out.println("Select konnte nicht gemacht werden!");    
            javax.swing.JOptionPane.showMessageDialog(this, "Select kann nicht gemacht werden");
        }
    }//GEN-LAST:event_bttnRechtsActionPerformed

    private void textVornameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textVornameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textVornameActionPerformed

    private void bttnLinksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnLinksActionPerformed
try {
       // take the results from resultset 
      // push(verschiebe) the clients to the left 
        if(res_selectAll.previous()){ 
            int id = res_selectAll.getInt("ID");
            String vorname = res_selectAll.getString("Vorname");
            String nachname = res_selectAll.getString("nachname");
            String age = res_selectAll.getString("age");
            
            // save the taken results in variables
            textID.setText(""+id);
            textVorname.setText(vorname);
            textNachname.setText(nachname);
            textAge.setText(age);
           
        } else {
            // set the row pointer after the last element
            res_selectAll.afterLast();
        }
        }
        catch (SQLException ex) {
        // error message can not select
        System.out.println("Select konnte nicht gemacht werden!");    
            javax.swing.JOptionPane.showMessageDialog(this, "Select kann nicht gemacht werden");
        }
    }//GEN-LAST:event_bttnLinksActionPerformed

    private void txtclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtclearActionPerformed
       // put the Vorname, Nachname, Age fields as empty  
        textVorname.setText("");
        textNachname.setText("");
        textAge.setText("");
        
    }//GEN-LAST:event_txtclearActionPerformed

    private void textIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textIDActionPerformed
        // Wertevon textfields in Variablen speichern.
        // Parameter an ein ADD Statement binden.
        // Statement ausfuhren.
        // Fehlermeldung, wenn es kein Add gegeben hat.
        
    }//GEN-LAST:event_textIDActionPerformed

    private void bttnADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnADDActionPerformed
        try{
        // execute the insert statement and put values for Vorname, Nachname, Age
        stmt_add.setString(1,textVorname.getText());
        stmt_add.setString(2,textNachname.getText());
        stmt_add.setString(3,textAge.getText());
        
        // execute Update und Query
        int rows_changed = stmt_add.executeUpdate();
        res_selectAll = stmt_selectAll.executeQuery();
        
        if(rows_changed > 0){
            // when something changes, show successful 
            javax.swing.JOptionPane.showMessageDialog(this, "Successful!");
        }else{
            // otherwise show not successful
        javax.swing.JOptionPane.showMessageDialog(this, "NOT Successful!");
        }
            
    }catch(SQLException ex) {
        // error message can not insert
        System.out.println("NOT Successful!");    
            javax.swing.JOptionPane.showMessageDialog(this, "NOT Successful!");
        }
    
    }//GEN-LAST:event_bttnADDActionPerformed

    private void textNachnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNachnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textNachnameActionPerformed

    private void bttnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnUpdateActionPerformed
       try{
        // execute the update statement and put values for Vorname, Nachname, Age, ID
        stmt_update.setString(1,textVorname.getText());
        stmt_update.setString(2,textNachname.getText());
        stmt_update.setString(3,textAge.getText());
        stmt_update.setString(4,textID.getText());
        
        // execute Update und Query
        int rows_changed = stmt_update.executeUpdate();
        res_selectAll = stmt_selectAll.executeQuery();
        
        if(rows_changed > 0){
            // when something changes, show updated
            javax.swing.JOptionPane.showMessageDialog(this, "Updated!");
        }else{
            // otherwise show NOT updated
        javax.swing.JOptionPane.showMessageDialog(this, "NOT Updated!");
        }
            
    }catch(SQLException ex) {
        // error message can not update
        System.out.println("NOT Updated!");    
            javax.swing.JOptionPane.showMessageDialog(this, "NOT Updated!");
        }
    
    }//GEN-LAST:event_bttnUpdateActionPerformed

    private void bttnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnDeleteActionPerformed
        try{
        // Execute delete statement und put the values for ID
        stmt_delete.setString(1,textID.getText());
        
        // execute Update und Query
        int rows_changed = stmt_delete.executeUpdate();
        res_selectAll = stmt_selectAll.executeQuery();
        
        if(rows_changed > 0){
            // if something changes, show deleted
            javax.swing.JOptionPane.showMessageDialog(this, "Deleted!");
        }else{
            // otherwise show not deleted
        javax.swing.JOptionPane.showMessageDialog(this, "NOT Deleted!");
        }
            
    }catch(SQLException ex) {
        // error message can not delete
        System.out.println("NOT Deleted!");    
            javax.swing.JOptionPane.showMessageDialog(this, "NOT Deleted!");
        }
    }//GEN-LAST:event_bttnDeleteActionPerformed

    private void txtDatenbankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDatenbankActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDatenbankActionPerformed

    private void textAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textAgeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttnADD;
    private javax.swing.JButton bttnConnection;
    private javax.swing.JButton bttnDelete;
    private javax.swing.JButton bttnDiscon;
    private javax.swing.JButton bttnLinks;
    private javax.swing.JButton bttnRechts;
    private javax.swing.JButton bttnUpdate;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblDatenbank;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblNachname;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPort;
    private javax.swing.JLabel lblServer;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel lblVorname;
    private javax.swing.JTextField textAge;
    private javax.swing.JTextField textID;
    private javax.swing.JTextField textNachname;
    private javax.swing.JTextField textVorname;
    private javax.swing.JTextField txtDatenbank;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPort;
    private javax.swing.JTextField txtServer;
    private javax.swing.JTextField txtUsername;
    private javax.swing.JButton txtclear;
    // End of variables declaration//GEN-END:variables
}
